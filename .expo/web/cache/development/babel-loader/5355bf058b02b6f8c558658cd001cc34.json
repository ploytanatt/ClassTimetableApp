{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from 'react-native-paper';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { accountLogin } from \"../store/action/loginAction\";\nimport { ip } from \"../Ip\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"63070073\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"1234\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var dispatch = useDispatch();\n  function confirmLogin() {\n    if (username == \"\") {\n      alert(\"Please insert username\");\n    } else if (password == \"\") {\n      alert(\"Please insert password\");\n    } else {\n      axios.post('http://' + ip + ':3000/login', {\n        username: username,\n        password: password\n      }).then(function (response) {\n        console.log(response.data);\n        if (response.data.status == 'complete') {\n          var accountData = response.data.accountData;\n          setUsername(\"\");\n          setPassword(\"\");\n          dispatch(accountLogin(accountData));\n          navigation.navigate(\"Home Screen\");\n        } else if (response.data.status == \"not found\") {\n          alert(\"username or password is incorrect\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/images/background-image.png\"),\n      resizeMode: \"cover\",\n      style: styles.backgroundimage,\n      children: [_jsx(Image, {\n        style: styles.logoImage,\n        source: require(\"../assets/images/kmitl-text.png\")\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsxs(View, {\n        style: styles.inputView,\n        children: [_jsx(Text, {\n          style: styles.inputDescription,\n          children: \"Username\"\n        }), _jsx(TextInput, {\n          style: styles.TextInput,\n          placeholder: \"Username\",\n          mode: \"outlined\",\n          theme: {\n            colors: {\n              primary: 'black',\n              underlineColor: 'transparent'\n            }\n          },\n          left: _jsx(TextInput.Icon, {\n            style: {\n              marginTop: 15\n            },\n            name: \"account\"\n          }),\n          placeholderTextColor: \"#003f5c\",\n          onChangeText: function onChangeText(username) {\n            return setUsername(username);\n          },\n          value: username\n        })]\n      }), _jsxs(View, {\n        style: styles.inputView,\n        children: [_jsx(Text, {\n          style: styles.inputDescription,\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.TextInput,\n          placeholder: \"Password\",\n          mode: \"outlined\",\n          placeholderTextColor: \"#003f5c\",\n          theme: {\n            colors: {\n              primary: 'black',\n              underlineColor: 'transparent'\n            }\n          },\n          left: _jsx(TextInput.Icon, {\n            style: {\n              marginTop: 15\n            },\n            name: \"lock\"\n          }),\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return setPassword(password);\n          },\n          value: password\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: confirmLogin,\n        children: _jsx(Text, {\n          style: styles.loginText,\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  backgroundimage: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  },\n  logoImage: {\n    marginBottom: 40,\n    width: 250,\n    height: 100\n  },\n  inputView: {\n    width: \"100%\",\n    height: 80,\n    marginBottom: 20,\n    paddingHorizontal: 20\n  },\n  TextInput: {\n    height: 50,\n    width: '100%',\n    borderRadius: 5,\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    fontSize: 14\n  },\n  inputDescription: {\n    color: '#FF9900',\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 16\n  },\n  register_button: {\n    height: 30\n  },\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 8,\n    height: '7%',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    backgroundColor: \"orange\"\n  },\n  loginText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["StatusBar","React","useState","useEffect","TextInput","axios","useDispatch","accountLogin","ip","LoginScreen","navigation","username","setUsername","password","setPassword","dispatch","confirmLogin","alert","post","then","response","console","log","data","status","accountData","navigate","catch","err","styles","container","require","backgroundimage","logoImage","inputView","inputDescription","colors","primary","underlineColor","marginTop","loginBtn","loginText","StyleSheet","create","flex","justifyContent","alignItems","marginBottom","width","height","paddingHorizontal","borderRadius","alignSelf","backgroundColor","fontSize","color","fontWeight","register_button"],"sources":["C:/Users/tanat/Desktop/mobile-project/mobile-project-main/screen/LoginScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport {TextInput} from 'react-native-paper'\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { accountLogin } from \"../store/action/loginAction\";\r\nimport {ip} from '../Ip'\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n  const [username, setUsername] = useState(\"63070073\");\r\n  const [password, setPassword] = useState(\"1234\");\r\n  const dispatch = useDispatch();\r\n\r\n  function confirmLogin(){\r\n    if(username == \"\"){\r\n      alert(\"Please insert username\");\r\n    }\r\n    else if(password == \"\"){\r\n      alert(\"Please insert password\");\r\n    }\r\n    else{\r\n      axios.post('http://'+ip+':3000/login', {username: username, password: password})\r\n      .then(function (response){\r\n        console.log(response.data);\r\n        if(response.data.status == 'complete'){\r\n          const accountData = response.data.accountData;\r\n          setUsername(\"\");\r\n          setPassword(\"\");\r\n          dispatch(accountLogin(accountData));\r\n          \r\n          navigation.navigate(\"Home Screen\");\r\n        }\r\n        else if(response.data.status == \"not found\"){\r\n          alert(\"username or password is incorrect\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={require(\"../assets/images/background-image.png\")} resizeMode=\"cover\" style={styles.backgroundimage}>\r\n      <Image style={styles.logoImage} source={require(\"../assets/images/kmitl-text.png\")} />\r\n        \r\n        <StatusBar style=\"auto\" />\r\n        <View style={styles.inputView}>\r\n            <Text style={styles.inputDescription}>Username</Text>\r\n            <TextInput\r\n            style={styles.TextInput}\r\n            placeholder=\"Username\"\r\n            mode=\"outlined\"\r\n            theme={{colors: {primary: 'black', underlineColor: 'transparent'}}}\r\n            left={<TextInput.Icon style={{marginTop: 15}} name=\"account\" />}\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText={(username) => setUsername(username)}\r\n            value={username}\r\n            />\r\n        </View>\r\n    \r\n        <View style={styles.inputView}>\r\n            <Text style={styles.inputDescription}>Password</Text>\r\n            <TextInput\r\n            style={styles.TextInput}\r\n            placeholder=\"Password\"\r\n            mode=\"outlined\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            theme={{colors: {primary: 'black', underlineColor: 'transparent'}}}\r\n            left={<TextInput.Icon style={{marginTop: 15}} name=\"lock\" />}\r\n            secureTextEntry={true}\r\n            onChangeText={(password) => setPassword(password)}\r\n            value={password}\r\n            />\r\n        </View>\r\n    \r\n        {/* <TouchableOpacity onPress={() => {navigation.navigate(\"Register Screen\")}}>\r\n            <Text style={styles.register_button}>Register</Text>\r\n        </TouchableOpacity> */}\r\n    \r\n        <TouchableOpacity style={styles.loginBtn} onPress={confirmLogin}>\r\n            <Text style={styles.loginText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  backgroundimage: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n  },\r\n  logoImage: {\r\n    marginBottom: 40,\r\n    width: 250,\r\n    height: 100\r\n  },\r\n  inputView: {\r\n    width: \"100%\",\r\n    height: 80,\r\n    marginBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderRadius: 5,\r\n    alignSelf:'center',\r\n    backgroundColor: 'white',\r\n    fontSize:14\r\n  },\r\n  inputDescription:{\r\n    color:'#FF9900',\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    fontSize:16,\r\n  },\r\n  register_button: {\r\n    height: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"40%\",\r\n    borderRadius: 8,\r\n    height: '7%',\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    backgroundColor: \"orange\",\r\n  },\r\n  loginText: {\r\n    color:'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 18\r\n  },\r\n  \r\n});\r\n\r\nexport default LoginScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}