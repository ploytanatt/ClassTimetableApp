{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport HeaderBar from \"../component/HeaderBar\";\nimport axios from 'axios';\nimport { ip } from \"../Ip\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationScreen = function NotificationScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderBar, {\n      navigation: navigation,\n      goBack: true\n    }), _jsxs(ImageBackground, {\n      source: require(\"../assets/images/background-image.png\"),\n      resizeMode: \"cover\",\n      style: styles.backgroundimage,\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(View, {\n        style: styles.boxView,\n        children: _jsx(View, {\n          style: styles.box,\n          children: _jsxs(View, {\n            style: styles.textView,\n            children: [_jsx(Text, {\n              style: styles.nameText,\n              children: \"Name\"\n            }), _jsx(Text, {\n              style: styles.notificationText,\n              children: \"Sent Message\"\n            }), _jsx(Text, {\n              style: styles.timeText,\n              children: \"15:00\"\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  backgroundimage: {\n    flex: 1\n  },\n  boxView: {\n    marginTop: 10,\n    paddingHorizontal: 5\n  },\n  box: {\n    backgroundColor: 'white',\n    width: '100%',\n    height: 100,\n    borderRadius: 10,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    border: '1px solid gray'\n  },\n  textView: {\n    flex: 5,\n    justifyContent: 'space-around'\n  },\n  nameText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  notificationText: {\n    fontSize: 14\n  },\n  timeText: {\n    color: 'gray',\n    fontWeight: 'bold'\n  }\n});\nexport default NotificationScreen;","map":{"version":3,"names":["StatusBar","React","useState","useEffect","MaterialCommunityIcons","HeaderBar","axios","ip","NotificationScreen","navigation","username","setUsername","password","setPassword","isLoading","setLoading","data","setData","styles","container","require","backgroundimage","boxView","box","textView","nameText","notificationText","timeText","StyleSheet","create","flex","justifyContent","marginTop","paddingHorizontal","backgroundColor","width","height","borderRadius","paddingVertical","border","fontSize","fontWeight","color"],"sources":["C:/Users/tanat/Desktop/mobile-project/mobile-project-main/screen/NotificationScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons} from '@expo/vector-icons';\r\nimport HeaderBar from \"../component/HeaderBar\";\r\n\r\nimport axios from 'axios';\r\nimport {ip} from '../Ip'\r\n\r\n\r\nconst NotificationScreen = ({navigation}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderBar navigation={navigation} goBack={true}/>\r\n      <ImageBackground source={require(\"../assets/images/background-image.png\")} resizeMode=\"cover\" style={styles.backgroundimage}>\r\n        <StatusBar style=\"auto\" />\r\n        <View style={styles.boxView}>\r\n          <View style={styles.box}>\r\n            <View style={styles.textView}>\r\n              <Text style={styles.nameText}>Name</Text>\r\n              <Text style={styles.notificationText}>Sent Message</Text>\r\n              <Text style={styles.timeText}>15:00</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  backgroundimage: {\r\n    flex: 1,\r\n  },\r\n  boxView: {\r\n    marginTop: 10,\r\n    paddingHorizontal: 5,\r\n  },\r\n  box: {\r\n    backgroundColor: 'white',\r\n    width: '100%',\r\n    height: 100,\r\n    borderRadius: 10,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    border: '1px solid gray'\r\n  },\r\n  textView:{\r\n    flex: 5,\r\n    justifyContent: 'space-around'\r\n  },\r\n  nameText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  notificationText:{\r\n    fontSize: 14\r\n  },\r\n  timeText: {\r\n    color: 'gray',\r\n    fontWeight: 'bold',\r\n  }\r\n  \r\n});\r\n\r\nexport default NotificationScreen;\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AASnD,SAASC,sBAAsB,QAAO,oBAAoB;AAC1D,OAAOC,SAAS;AAEhB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,EAAE;AAAc;AAAA;AAGxB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,OAAqB;EAAA,IAAhBC,UAAU,QAAVA,UAAU;EACrC,gBAAgCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCQ,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCU,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCX,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCY,SAAS;IAAEC,UAAU;EAC5B,iBAAwBb,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7Bc,IAAI;IAAEC,OAAO;EAEpB,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,SAAS;MAAC,UAAU,EAAEV,UAAW;MAAC,MAAM,EAAE;IAAK,EAAE,EAClD,MAAC,eAAe;MAAC,MAAM,EAAEW,OAAO,yCAA0C;MAAC,UAAU,EAAC,OAAO;MAAC,KAAK,EAAEF,MAAM,CAACG,eAAgB;MAAA,WAC1H,KAAC,SAAS;QAAC,KAAK,EAAC;MAAM,EAAG,EAC1B,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACI,OAAQ;QAAA,UAC1B,KAAC,IAAI;UAAC,KAAK,EAAEJ,MAAM,CAACK,GAAI;UAAA,UACtB,MAAC,IAAI;YAAC,KAAK,EAAEL,MAAM,CAACM,QAAS;YAAA,WAC3B,KAAC,IAAI;cAAC,KAAK,EAAEN,MAAM,CAACO,QAAS;cAAA;YAAA,EAAY,EACzC,KAAC,IAAI;cAAC,KAAK,EAAEP,MAAM,CAACQ,gBAAiB;cAAA;YAAA,EAAoB,EACzD,KAAC,IAAI;cAAC,KAAK,EAAER,MAAM,CAACS,QAAS;cAAA;YAAA,EAAa;UAAA;QACrC;MACF,EACF;IAAA,EACS;EAAA,EACb;AAEX,CAAC;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDV,eAAe,EAAE;IACfS,IAAI,EAAE;EACR,CAAC;EACDR,OAAO,EAAE;IACPU,SAAS,EAAE,EAAE;IACbC,iBAAiB,EAAE;EACrB,CAAC;EACDV,GAAG,EAAE;IACHW,eAAe,EAAE,OAAO;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,EAAE;IAChBJ,iBAAiB,EAAE,EAAE;IACrBK,eAAe,EAAE,EAAE;IACnBC,MAAM,EAAE;EACV,CAAC;EACDf,QAAQ,EAAC;IACPM,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDN,QAAQ,EAAE;IACRe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDf,gBAAgB,EAAC;IACfc,QAAQ,EAAE;EACZ,CAAC;EACDb,QAAQ,EAAE;IACRe,KAAK,EAAE,MAAM;IACbD,UAAU,EAAE;EACd;AAEF,CAAC,CAAC;AAEF,eAAejC,kBAAkB"},"metadata":{},"sourceType":"module"}