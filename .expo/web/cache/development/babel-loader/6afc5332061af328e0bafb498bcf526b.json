{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from 'react-native-paper';\nimport axios from 'axios';\nimport { ip } from \"../Ip\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirm = _useState6[0],\n    setConfirm = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    data = _useState10[0],\n    setData = _useState10[1];\n  function confirmRegister() {\n    if (username == \"\") {\n      alert('Please insert username');\n    } else if (password == \"\") {\n      alert(\"Please insert password\");\n    } else if (confirm == \"\") {\n      alert(\"Please insert confirm password\");\n    } else if (password != confirm) {\n      alert('Password and confirm password does not match');\n    } else {\n      axios.post('http://' + ip + ':3000/register', {\n        username: username,\n        password: password\n      }).then(function (response) {\n        if (response.data.status == \"complete\") {\n          alert(\"Register complete\");\n        } else {\n          alert(\"Register Incomplete\");\n        }\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirm(\"\");\n      }).catch(function (err) {\n        alert(\"err: \" + err);\n      });\n    }\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/images/background-image.png\"),\n      resizeMode: \"cover\",\n      style: styles.backgroundimage,\n      children: [_jsx(Image, {\n        style: styles.logoImage,\n        source: require(\"../assets/images/kmitl-text.png\")\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsxs(View, {\n        style: styles.inputView,\n        children: [_jsx(Text, {\n          style: styles.inputDescription,\n          children: \"Username\"\n        }), _jsx(TextInput, {\n          style: styles.TextInput,\n          placeholder: \"Username\",\n          mode: \"outlined\",\n          theme: {\n            colors: {\n              primary: 'black',\n              underlineColor: 'transparent'\n            }\n          },\n          left: _jsx(TextInput.Icon, {\n            style: {\n              marginTop: 15\n            },\n            name: \"account\"\n          }),\n          placeholderTextColor: \"#003f5c\",\n          onChangeText: function onChangeText(username) {\n            return setUsername(username);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.inputView,\n        children: [_jsx(Text, {\n          style: styles.inputDescription,\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.TextInput,\n          placeholder: \"Password\",\n          mode: \"outlined\",\n          placeholderTextColor: \"#003f5c\",\n          theme: {\n            colors: {\n              primary: 'black',\n              underlineColor: 'transparent'\n            }\n          },\n          left: _jsx(TextInput.Icon, {\n            style: {\n              marginTop: 15\n            },\n            name: \"lock\"\n          }),\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return setPassword(password);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.inputView,\n        children: [_jsx(Text, {\n          style: styles.inputDescription,\n          children: \"Confirm Password\"\n        }), _jsx(TextInput, {\n          style: styles.TextInput,\n          placeholder: \"Confirm Password\",\n          mode: \"outlined\",\n          placeholderTextColor: \"#003f5c\",\n          theme: {\n            colors: {\n              primary: 'black',\n              underlineColor: 'transparent'\n            }\n          },\n          left: _jsx(TextInput.Icon, {\n            style: {\n              marginTop: 15\n            },\n            name: \"lock\"\n          }),\n          secureTextEntry: true,\n          onChangeText: function onChangeText(confirm) {\n            return setConfirm(confirm);\n          }\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.registerBtn,\n        onPress: confirmRegister,\n        children: _jsx(Text, {\n          style: styles.registerText,\n          children: \"Register\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  backgroundimage: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  },\n  logoImage: {\n    marginBottom: 40,\n    width: 250,\n    height: 100\n  },\n  inputView: {\n    width: \"100%\",\n    height: 80,\n    marginBottom: 20,\n    paddingHorizontal: 20\n  },\n  TextInput: {\n    height: 50,\n    width: '100%',\n    borderRadius: 5,\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    fontSize: 14\n  },\n  inputDescription: {\n    color: 'orange',\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 16\n  },\n  registerBtn: {\n    width: \"40%\",\n    borderRadius: 8,\n    height: '7%',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    backgroundColor: \"orange\"\n  },\n  registerText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["StatusBar","React","useState","useEffect","TextInput","axios","ip","RegisterScreen","navigation","username","setUsername","password","setPassword","confirm","setConfirm","isLoading","setLoading","data","setData","confirmRegister","alert","post","then","response","status","catch","err","styles","container","require","backgroundimage","logoImage","inputView","inputDescription","colors","primary","underlineColor","marginTop","registerBtn","registerText","StyleSheet","create","flex","justifyContent","alignItems","marginBottom","width","height","paddingHorizontal","borderRadius","alignSelf","backgroundColor","fontSize","color","fontWeight"],"sources":["C:/Users/tanat/Desktop/mobile-project/mobile-project-main/screen/RegisterScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport {TextInput} from 'react-native-paper'\r\nimport axios from 'axios';\r\nimport {ip} from '../Ip'\r\n\r\nconst RegisterScreen = ({navigation}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  function confirmRegister(){\r\n    if(username == \"\"){\r\n        alert('Please insert username');\r\n    }\r\n    else if(password == \"\"){\r\n        alert(\"Please insert password\");\r\n    }\r\n    else if(confirm == \"\"){\r\n        alert(\"Please insert confirm password\");\r\n    }\r\n    else if(password != confirm){\r\n        alert('Password and confirm password does not match');\r\n    }\r\n    else{\r\n        axios.post('http://'+ip+':3000/register', {username: username, password: password})\r\n        .then((response) => {\r\n            if(response.data.status == \"complete\"){\r\n                alert(\"Register complete\");\r\n            }\r\n            else{\r\n                alert(\"Register Incomplete\");\r\n            }\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            setConfirm(\"\");\r\n        })\r\n        .catch((err) =>{\r\n            alert(\"err: \" + err);\r\n        });\r\n    }\r\n  }\r\n  \r\n//   useEffect(() => {\r\n//     axios\r\n//         .get('http://'+ip+':3000/menu')\r\n//         .then(function (response) {\r\n//           // handle success\r\n//           setData(response.data);\r\n//           console.log(\"aaa: \" + response.data[0].menu_name);\r\n//         })\r\n//         .catch(function (error) {\r\n//           // handle error\r\n//           console.log(error.message);\r\n//         })\r\n//         .finally(function () {\r\n//           // always executed\r\n//           setLoading(false);\r\n//           console.log('Finally called');\r\n//       });\r\n//   }, []);\r\n  \r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={require(\"../assets/images/background-image.png\")} resizeMode=\"cover\" style={styles.backgroundimage}>\r\n      <Image style={styles.logoImage} source={require(\"../assets/images/kmitl-text.png\")} />\r\n        {/* <Image style={styles.logoImage} source={{uri:\"https://www.kmids.ac.th/wp-content/uploads/2021/04/Sub-Logo-KMITL_KMITL-%E0%B8%9E%E0%B8%A3%E0%B8%B0%E0%B8%88%E0%B8%AD%E0%B8%A1%E0%B9%80%E0%B8%81%E0%B8%A5%E0%B9%89%E0%B8%B2%E0%B8%A5%E0%B8%B2%E0%B8%94%E0%B8%81%E0%B8%A3%E0%B8%B0%E0%B8%9A%E0%B8%B1%E0%B8%87.png\"}} /> */}\r\n        \r\n        <StatusBar style=\"auto\" />\r\n        <View style={styles.inputView}>\r\n            <Text style={styles.inputDescription}>Username</Text>\r\n            <TextInput\r\n            style={styles.TextInput}\r\n            placeholder=\"Username\"\r\n            mode=\"outlined\"\r\n            theme={{colors: {primary: 'black', underlineColor: 'transparent'}}}\r\n            left={<TextInput.Icon style={{marginTop: 15}} name=\"account\" />}\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText={(username) => setUsername(username)}\r\n            />\r\n        </View>\r\n    \r\n        <View style={styles.inputView}>\r\n            <Text style={styles.inputDescription}>Password</Text>\r\n            <TextInput\r\n            style={styles.TextInput}\r\n            placeholder=\"Password\"\r\n            mode=\"outlined\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            theme={{colors: {primary: 'black', underlineColor: 'transparent'}}}\r\n            left={<TextInput.Icon style={{marginTop: 15}} name=\"lock\" />}\r\n            secureTextEntry={true}\r\n            onChangeText={(password) => setPassword(password)}\r\n            />\r\n        </View>\r\n\r\n        <View style={styles.inputView}>\r\n            <Text style={styles.inputDescription}>Confirm Password</Text>\r\n            <TextInput\r\n            style={styles.TextInput}\r\n            placeholder=\"Confirm Password\"\r\n            mode=\"outlined\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            theme={{colors: {primary: 'black', underlineColor: 'transparent'}}}\r\n            left={<TextInput.Icon style={{marginTop: 15}} name=\"lock\" />}\r\n            secureTextEntry={true}\r\n            onChangeText={(confirm) => setConfirm(confirm)}\r\n            />\r\n        </View>\r\n    \r\n        <TouchableOpacity style={styles.registerBtn} onPress={confirmRegister}>\r\n            <Text style={styles.registerText}>Register</Text>\r\n        </TouchableOpacity>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  backgroundimage: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n  },\r\n  logoImage: {\r\n    marginBottom: 40,\r\n    width: 250,\r\n    height: 100\r\n  },\r\n  inputView: {\r\n    width: \"100%\",\r\n    height: 80,\r\n    marginBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderRadius: 5,\r\n    alignSelf:'center',\r\n    backgroundColor: 'white',\r\n    fontSize:14\r\n  },\r\n  inputDescription:{\r\n    color:'orange',\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    fontSize:16,\r\n  },\r\n  registerBtn: {\r\n    width: \"40%\",\r\n    borderRadius: 8,\r\n    height: '7%',\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    backgroundColor: \"orange\",\r\n  },\r\n  registerText: {\r\n    color:'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 18\r\n  },\r\n  \r\n});\r\n\r\nexport default RegisterScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}