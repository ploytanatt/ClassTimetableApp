{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { ip } from \"../Ip\";\nimport HeaderBar from \"../component/HeaderBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderBar, {\n      navigation: navigation\n    }), _jsxs(ImageBackground, {\n      source: require(\"../assets/images/background-image.png\"),\n      resizeMode: \"cover\",\n      style: styles.backgroundimage,\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(View, {\n        style: styles.boxView,\n        children: _jsxs(View, {\n          style: styles.box,\n          children: [_jsx(View, {\n            style: styles.iconView,\n            children: _jsx(MaterialCommunityIcons, {\n              style: styles.icon,\n              name: \"account-circle-outline\"\n            })\n          }), _jsxs(View, {\n            style: styles.textView,\n            children: [_jsx(Text, {\n              style: styles.chatDetail,\n              children: \"Teacher Name&Surname\"\n            }), _jsx(Text, {\n              style: styles.chatDetail,\n              children: \"Subject Name\"\n            })]\n          }), _jsx(View, {\n            style: styles.unreadView,\n            children: _jsx(View, {\n              style: styles.unreadNum,\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: 'bold',\n                  color: 'white',\n                  fontSize: 16\n                },\n                children: \"1\"\n              })\n            })\n          })]\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  iconView: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  icon: {\n    fontSize: 50,\n    color: 'black'\n  },\n  backgroundimage: {\n    flex: 1\n  },\n  text: {\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 20\n  },\n  boxView: {\n    marginTop: 10,\n    paddingHorizontal: 5\n  },\n  box: {\n    backgroundColor: '#F7D0D5',\n    width: '100%',\n    height: 80,\n    borderRadius: 10,\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    justifyContent: 'space-between'\n  },\n  textView: {\n    flex: 5,\n    justifyContent: 'center'\n  },\n  chatDetail: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  unreadView: {\n    justifyContent: \"center\"\n  },\n  unreadNum: {\n    backgroundColor: 'red',\n    borderRadius: \"100%\",\n    paddingHorizontal: 15,\n    paddingVertical: 10\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["StatusBar","React","useState","useEffect","MaterialCommunityIcons","axios","ip","HeaderBar","ChatScreen","navigation","username","setUsername","password","setPassword","isLoading","setLoading","data","setData","styles","container","require","backgroundimage","boxView","box","iconView","icon","textView","chatDetail","unreadView","unreadNum","fontWeight","color","fontSize","StyleSheet","create","flex","justifyContent","text","marginBottom","marginTop","paddingHorizontal","backgroundColor","width","height","borderRadius","flexDirection","paddingVertical"],"sources":["C:/Users/tanat/Desktop/mobile-project/mobile-project-main/screen/ChatScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons} from '@expo/vector-icons';\r\n\r\nimport axios from 'axios';\r\nimport {ip} from '../Ip'\r\nimport HeaderBar from \"../component/HeaderBar\";\r\n\r\n\r\nconst ChatScreen = ({navigation}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderBar navigation={navigation}/>\r\n      <ImageBackground source={require(\"../assets/images/background-image.png\")} resizeMode=\"cover\" style={styles.backgroundimage}>\r\n        <StatusBar style=\"auto\" />\r\n        <View style={styles.boxView}>\r\n          <View style={styles.box}>\r\n            <View style={styles.iconView}>\r\n              <MaterialCommunityIcons style={styles.icon} name=\"account-circle-outline\" />\r\n            </View>\r\n            <View style={styles.textView}>\r\n              <Text style={styles.chatDetail}>Teacher Name&Surname</Text>\r\n              <Text style={styles.chatDetail}>Subject Name</Text>\r\n            </View>\r\n            <View style={styles.unreadView}>\r\n              <View style={styles.unreadNum}>\r\n                <Text style={{fontWeight: 'bold', color: 'white', fontSize: 16}}>1</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  iconView: {\r\n    flex: 1,\r\n    justifyContent: 'center'\r\n  },\r\n  icon: {\r\n    fontSize: 50,\r\n    color: 'black',\r\n  },\r\n  backgroundimage: {\r\n    flex: 1,\r\n  },\r\n  text:{\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    fontSize:20,\r\n  },\r\n  boxView: {\r\n    marginTop: 10,\r\n    paddingHorizontal: 5,\r\n  },\r\n  box: {\r\n    backgroundColor: '#F7D0D5',\r\n    width: '100%',\r\n    height: 80,\r\n    borderRadius: 10,\r\n    flexDirection: 'row',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    justifyContent: 'space-between'\r\n  },\r\n  textView:{\r\n    flex: 5,\r\n    justifyContent: 'center'\r\n  },\r\n  chatDetail: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  unreadView:{\r\n    justifyContent:\"center\",\r\n  },\r\n  unreadNum:{\r\n    backgroundColor: 'red',\r\n    borderRadius: \"100%\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n  }\r\n  \r\n});\r\n\r\nexport default ChatScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}